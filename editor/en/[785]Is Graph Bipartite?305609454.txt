class Solution:
    def isBipartite(self, graph: List[List[int]]) -> bool:
        n = len(graph)
        flags = [None] * n
        front = [0]
        flags[0] = 0
        while len(front) > 0:
            cur = front.pop()
            cur_flag = flags[cur]
            nei_flag = 1 if cur_flag == 0 else 0
            neighbors = graph[cur]
            for nei in neighbors:
                if flags[nei] is not None:
                    if flags[nei] != nei_flag:
                        return False
                else:
                    flags[nei] = nei_flag
                    front.insert(0, nei)
        return True



# total_testcases:78
# total_correct:74
# input_formatted:[[],[2,4,6],[1,4,8,9],[7,8],[1,2,8,9],[6,9],[1,5,7,8,9],[3,6,9],[2,3,4,6,9],[2,4,5,6,7,8]]
# expected_output:false
# code_output:true
