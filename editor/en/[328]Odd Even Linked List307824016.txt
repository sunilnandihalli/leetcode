# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    def oddEvenList(self, head: ListNode) -> ListNode:
        if head is None:
            return head

        odd_head = None
        even_head = None
        odd_last_node = None
        even_last_node = None
        iter = head
        i = 0
        while iter:
            if i % 2 == 0:
                if odd_head is None:
                    odd_head = iter
                    odd_last_node = iter
                else:
                    odd_last_node.next = iter
                    odd_last_node = iter
            else:
                if even_head is None:
                    even_head = iter
                    even_last_node = iter
                else:
                    even_last_node.next = iter
                    even_last_node = iter
            iter = iter.next
            i += 1

        odd_last_node.next = even_head
        even_last_node.next = None
        return odd_head

# runtime_error:Line 37: AttributeError: 'NoneType' object has no attribute 'next'
# last_testcase:[1]
