from collections import defaultdict
import bisect as b


class Solution:
    def subarraySum(self, nums: List[int], k: int) -> int:
        acc = [0]
        for x in nums:
            acc.append(acc[-1] + x)
        prefix_sum_indexes = defaultdict(list)
        for s, i in enumerate(acc):
            prefix_sum_indexes[s].append(i)

        count = 0
        for i in range(len(acc) - 1, -1, -1):
            s_end = acc[i]
            s_begin = s_end - k
            index_list = prefix_sum_indexes.get(s_begin, [])
            count += b.bisect_right(index_list, i)
        return count

# total_testcases:80
# total_correct:15
# input_formatted:[1,2,3], 3
# expected_output:2
# code_output:1
